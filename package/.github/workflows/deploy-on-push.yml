name: Deploy React-Business to VPS

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
      BRANCH: ${{ secrets.BRANCH || 'main' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.18.0"

      - name: Install dependencies
        run: npm ci

      - name: Run build (local runner)
        run: npm run build

      # === Prepare SSH key for rsync/ssh ===
      - name: Start ssh-agent and add deploy key
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create rsync exclude file
        run: |
          cat > .rsync-exclude <<'EOF'
          node_modules
          .git
          .github
          .env
          EOF

      # === Sync project files to server ===
      - name: Rsync project to remote
        run: |
          mkdir -p $HOME/.ssh
          RSYNC_RSH="ssh -o StrictHostKeyChecking=no -p ${SSH_PORT:-22}"
          rsync -avz --delete --exclude-from=.rsync-exclude -e "$RSYNC_RSH" ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_DIR }}
        env:
          SSH_PORT: ${{ secrets.SSH_PORT }}

      # === On remote: npm ci, build (again) and restart ===
      - name: Run remote install/build/restart
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script: |
            set -e
            cd "${{ secrets.REMOTE_DIR }}"
            # คุณอาจต้องการให้ NPM ทำ production install
            export HOME=/home/${{ secrets.SSH_USER }}
            # ติดตั้ง dependency อีกครั้งบน remote (ปลอดภัยกว่า)
            if [ -f package-lock.json ] || [ -f package.json ]; then
              npm ci --production
            fi
            # ถ้าจำเป็น ให้ build (บางโปรเจกต์ build บน server)
            if grep -q "\"build\"" package.json; then
              npm run build || true
            fi

            # Restart app (pm2 ถ้ามี)
            if command -v pm2 >/dev/null 2>&1; then
              pm2 reload all || pm2 start npm --name "react-business" -- start
            else
              # ถ้าใช้ systemd ให้แก้ชื่อ service ให้ตรง
              if sudo systemctl is-active --quiet react-business.service; then
                sudo systemctl restart react-business.service
              else
                echo "pm2 not found and systemd service react-business not present. Please start app manually."
              fi
            fi

            echo "Deployment finished: $(date)"
